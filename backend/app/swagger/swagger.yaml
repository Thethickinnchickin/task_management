openapi: 3.0.0
info:
  title: Task Management API
  description: API for managing tasks and users. Requires Bearer Token for all routes.
  version: "1.0.0"
servers:
  - url: http://localhost:5000
components:
  securitySchemes:
    BearerAuth:               # Name of the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT       # Optional: Specify Bearer format (JWT in your case)
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        user_id:
          type: integer
        completed:
          type: boolean
        priority:
          type: string
          enum: [low, medium, high]  # Added for task prioritization
        created_at:
          type: string
          format: date-time
    TaskInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
          default: false
        priority:
          type: string
          enum: [low, medium, high]  # Added for task prioritization
security:
  - BearerAuth: []             # Apply BearerAuth globally to all paths
paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Create a new user account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterInput'
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input
  /auth/login:
    post:
      summary: Login a user
      description: Authenticate user and return a Bearer token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
      responses:
        "200":
          description: Login successful. Returns a Bearer token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized, invalid credentials
  /:
    get:
      summary: Get all tasks
      security:                 # Specify Bearer token requirement for this route
        - BearerAuth: []
      parameters:
        - in: query
          name: completed
          schema:
            type: boolean
          required: false
          description: Filter tasks by completion status (true for completed, false for incomplete)
        - in: query
          name: sort
          schema:
            type: string
            enum: [created_at, title]  # Sort options
          required: false
          description: Sort tasks by field
      responses:
        "200":
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      security:                 # Specify Bearer token requirement for this route
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        "201":
          description: Task created
  /{task_id}:
    get:
      summary: Get a task by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: task_id
          schema:
            type: integer
          required: true
          description: The task ID
      responses:
        "200":
          description: Task data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      summary: Update a task
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: task_id
          schema:
            type: integer
          required: true
          description: The task ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        "200":
          description: Task updated
    delete:
      summary: Delete a task
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: task_id
          schema:
            type: integer
          required: true
          description: The task ID
      responses:
        "200":
          description: Task deleted
